#!/bin/bash

set -euo pipefail
cd ~

clone_repos() { while read -r repo; do git clone "https://github.com/$repo.git"; done; }
confirm() { read -rp "Press any key to continue anyway or Ctrl-C to quit"; }

export HOMEBREW_VERBOSE=${VERBOSE-}
S=1

updots() {
  echo "==> Updating Dotfiles…"
  ( cd dotfiles && git pull --ff-only )
}

upbrew() {
  echo "==> Brewing…"
  brew doctor || confirm

  for brewfile in "$@"; do brew_bundle "$brewfile"; done

  echo "==> Updating Homebrew dependencies…"
  brew outdated
  brew upgrade ${S:+--quiet}
  brew autoremove
  fix_completions
}

brew_bundle() {
  [ -e "${1:?}" ] || return 0

  export HOMEBREW_BUNDLE_FILE=$1
  echo "==> Checking Homebrew dependencies… $HOMEBREW_BUNDLE_FILE"
  brew bundle check ${S:+--quiet} || {
    echo "==> Installing Homebrew dependencies… $HOMEBREW_BUNDLE_FILE"
    brew bundle --no-lock ${S:+--quiet}
  }
}

fix_completions() {
  echo "==> Fixing shell completions…"
  ln -sf "${HOMEBREW_PREFIX:=$(brew --prefix)}/opt/fzf/shell/completion.bash" "${BASH_COMPLETION_COMPAT_DIR:?}/fzf"
  # TODO remove once confirmed we're done with hub
  rm -f "${BASH_COMPLETION_COMPAT_DIR:?}"/hub.*
}

uprbenv(){
  if [ -d /opt/rbenv/plugins ]; then echo "==> Updating rbenv…"
    rbenv update
    rbenv rehash
  else echo "==> Setting up rbenv…"
    sudo install -o "$USER" -g staff -d /opt/rbenv
    install -o "$USER" -g staff -d /opt/rbenv/plugins
    ( cd /opt/rbenv/plugins; clone_repos <<-PLUGINS
      tpope/rbenv-aliases
      ianheggie/rbenv-binstubs
      aripollak/rbenv-bundler-ruby-version
      tpope/rbenv-ctags
      sstephenson/rbenv-default-gems
      chriseppstein/rbenv-each
      ianheggie/rbenv-env
      mlafeldt/rbenv-man
      rkh/rbenv-update
      jasonkarns/ruby-build-update-defs
PLUGINS
    )
  fi
}

upnodenv(){
  if [ -d /opt/nodenv/plugins ]; then echo "==> Updating nodenv…"
    nodenv update
    nodenv rehash
  else echo "==> Setting up nodenv…"
    sudo install -o "$USER" -g staff -d /opt/nodenv
    install -o "$USER" -g staff -d /opt/nodenv/plugins
    ( cd /opt/nodenv/plugins; clone_repos <<-PLUGINS
      nodenv/node-build-update-defs
      nodenv/nodenv-aliases
      nodenv/nodenv-default-packages
      nodenv/nodenv-each
      nodenv/nodenv-man
      nodenv/nodenv-package-json-engine
      nodenv/nodenv-package-rehash
      nodenv/nodenv-update
PLUGINS
    )
  fi
}

upvim(){
  echo "==> Setting up vim…"
  vim +PluginUpdate +PluginClean +qall
}

upnpm(){
  echo "==> Updating npm…"
  NODENV_VERSION=system npm update -g ${S:+--quiet}
}

upgpg(){
  if command -v keybase; then echo "==> Updating keybase/gpg…"
    keybase pgp pull
  else
    echo "==> Skipping keybase…"
  fi
}

upprefs(){
  dotfiles/prefs
}


# update all by default
if [ $# = 0 ]; then set -- dots brew rbenv nodenv vim npm gpg prefs; fi

while [ $# -gt 0 ]; do
  case $1 in
  brew) upbrew ~/.config/Brewfile{,.local} ;;
  dots|rbenv|nodenv|vim|npm|gpg|prefs) up"$1" ;;
  *) echo "unknown: '$1'" >&2; exit 1 ;;
  esac
  shift
done
