set nocompatible

" project-specific vimrc but disable shell and write ops
set exrc
set secure

""""""""""""
" xdg setup:  https://tlvince.com/vim-respect-xdg
" set backupdir=$XDG_STATE_HOME/vim,/var/tmp,/tmp
" set directory=$XDG_STATE_HOME/vim,/var/tmp,/tmp
" set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
" set runtimepath=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME

" https://wiki.archlinux.org/title/XDG_Base_Directory
set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after

set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p')

set backupdir=$XDG_STATE_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_STATE_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_STATE_HOME/vim/undo     | call mkdir(&undodir,   'p')
set viewdir=$XDG_STATE_HOME/vim/view     | call mkdir(&viewdir,   'p')

set viminfofile=$XDG_STATE_HOME/vim/viminfo
""""""""""""

source $XDG_CONFIG_HOME/vim/plugins.vim
source $XDG_CONFIG_HOME/vim/ui.vim
source $XDG_CONFIG_HOME/vim/keys.vim

" Use ag over grep
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
endif

" automatically source vimrc if writing .vimrc or vimrc
" autocmd! BufWritePost .vimrc source $MYVIMRC

" source local vimrc if available
if filereadable(expand("$XDG_CONFIG_HOME/vim/vimrc.local"))
  source $XDG_CONFIG_HOME/vim/vimrc.local
endif

" plugin-specific configs loaded from $XDG_CONFIG_HOME/vim/after
