#!/usr/bin/env bash

if [ "$1" = --about ]; then
  cat <<-ABOUT
  Prints a message if relevant files have been modified that might necessitate a command being run.
  i.e. npm-install for package.json or rake db:migrate for db/schema.rb, etc
ABOUT
  exit
fi

old_head_ref=$1
new_head_ref=$2

null_ref=0000000000000000000000000000000000000000

magenta="\\033[1;31m"
cyan="\\033[0;37m"
reset="\\033[0m"

modified_files() {
  if [ "$old_head_ref" = "$null_ref" ]; then
    # initial checkout (clone). all files are 'modified'
    git ls-files
  else
    # list files that changed between the old head and new head
    git diff-tree --name-only --no-color -m "$old_head_ref" "$new_head_ref"
  fi
}

modified() {
  # files to check for modifications, as an array
  local -a files=( $@ )

  # prefix with '-e' arg
  files=( "${files[@]/#/ -e }" )

  # grep for specified files in list of modied files
  modified_files | grep --fixed-strings ${files[*]} >/dev/null 2>&1
}

remind() {
  local file=$1
  local cmd=$2

  printf "\\n${magenta}> %s modified, run: \`${cyan}%s${magenta}\`${reset}\\n" "$file" "$cmd"
}

check() {
  local file="$1"
  local cmd="$2"
  shift 2
  local -a files=("$@")

  if modified "${files[@]}"; then
    remind "$file" "$cmd"
  fi
}


check Package 'npm install' npm-shrinkwrap.json package-lock.json

check Package 'yarn' yarn.lock

check Gemfile 'bundle' Gemfile Gemfile.lock

check Schema 'rake db:migrate' db/migrate db/schema.rb db/structure.sql
