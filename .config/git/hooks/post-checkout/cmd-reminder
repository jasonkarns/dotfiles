#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

case "$1" in
--about) echo "Reminder prompt for install/update commands if files modified"; exit;;
esac

old_head_ref=$1
new_head_ref=$2

null_ref=0000000000000000000000000000000000000000

magenta="\\033[1;31m"
cyan="\\033[0;37m"
reset="\\033[0m"

initial_checkout() {
  test "$old_head_ref" = "$null_ref"
}

modified_files() {
  if initial_checkout; then
    git ls-files -- "$@"
  else
    git diff-tree --name-only --no-color -m "$old_head_ref" "$new_head_ref" -- "$@"
  fi
}

modified() {
  test -n "$(modified_files "$@")"
}

remind() {
  local file=$1
  local cmd=$2

  printf "\\n${magenta}> %s modified, run: \`${cyan}%s${magenta}\`${reset}\\n" "$file" "$cmd"
}

check() {
  local check_cmd="$1"

  if [ "$check_cmd" == -- ]
  then shift 1
  else shift 2
  fi

  local -a files=("$@")
  ! modified "${files[@]}"
}


check -- db/migrate db/schema.rb db/structure.sql ||
  remind "DB Schema" 'rake db:migrate'

check -- Gemfile Gemfile.lock gems.rb gems.locked ||
  bundle check ||
  remind "Gemfile" 'bundle'

check -- Podfile Podfile.lock ||
  remind "Podfile" 'pod install'

check -- npm-shrinkwrap.json package-lock.json ||
  remind "Package" 'npm install'

check -- yarn.lock ||
  yarn check ||
  remind "Package" 'yarn'
