[core]
	excludesfile = ~/.config/git/ignore ; this is the default
	editor = vim
	autocrlf = input
	; safecrlf = warn
	pager = less
	untrackedCache = true

[user]
	name = Jason Karns
	email = jason.karns@gmail.com
	signingkey = 4F072FBC1ACA2746

[github]
	user = jasonkarns

[alias]
	st = status
	ci = commit
	br = branch
	co = checkout
	cam = commit --amend --no-edit
	hist = log --graph --date=short --pretty=format:\"%C(yellow)%h%C(reset) %C(green)%ad%C(reset) %C(red)|%C(reset) %s%C(red)%d %C(reset)- %an%C(reset)\"
	glog = log --date=relative
	graph = log --graph --all --decorate --stat --date=short

	ap = add --patch
	cop = checkout --patch
	rp = reset --patch

	d = diff
	dc = diff --cached
	ds = diff --stat
	du = diff @{upstream}
	dw = diff --color-words

	fa = fetch --all
	cp = cherry-pick
	ctags = "! git ls-files | ctags --tag-relative=yes --extras=+f -L - -f $(git rev-parse --git-path tags) --languages=-sql"
	req = pull-request --push
	ff = merge --ff-only

	rebase = "rebase --rebase-merges"

	churn = "!f() { git --no-pager log --all --find-renames --find-copies --name-only --format='format:' \"$@\" | grep -v '^$' | sort | uniq -c | sort -nr | head; }; f"

	crawl = "!f() { next_commit=$(git rev-list --reverse HEAD..${1-$(git branch --contains | tail -1)} | head -1); : ${next_commit:=$1}; git checkout $next_commit; }; f"

	force = push --force-with-lease

	ghprs = "!f() { remote=$1; : ${remote:=$(git remote | grep '^origin\\|upstream$' | sort --reverse | head -1)}; if [ $remote ]; then git config --add remote.$remote.fetch +refs/pull/*/head:refs/remotes/${remote}/pr/*; echo \"added github PR refspec to fetch from ${remote}\" ; else echo 'no remote given nor upstream or origin remote'; fi; git fetch ${remote}; }; f"

	ignored = "ls-files --others -i --exclude-standard --directory"

	trim = "!f() { git branch --merged | grep -v '^* ' | xargs git branch --delete; }; f"

	fix-email = "filter-branch --env-filter 'if [ \"$GIT_COMMITTER_NAME\" = \"$(git config user.name)\" ]; then GIT_COMMITTER_EMAIL=\"$(git config user.email)\"; fi; if [ \"$GIT_AUTHOR_NAME\" = \"$(git config user.name)\" ]; then GIT_AUTHOR_EMAIL=\"$(git config user.email)\"; fi'"

[pager]
	; https://blog.github.com/2016-06-13-git-2-9-has-been-released/
	log = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	show = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less
	diff = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight | less

[diff]
	; algorithm = patience
	colorMoved = true
	; retired compactionHeuristic = true
	indentHeuristic = true
	mnemonicPrefix = true
	renames = copies
	wordRegex = [A-z0-9_]+|[^[:space:]]
[difftool]
	prompt = false
[merge]
	autoStash = true
	defaultToUpstream = true
	ff = false
	log = 999
	stat = true
	tool = vimdiff
; [merge "gemfilelock"]
; 	name = Relocks Gemfile.lock
; 	driver = bundle lock && git add -- Gemfile.lock

[rebase]
	autoSquash = true
	autoStash = true
[interactive]
	diffFilter = /usr/local/share/git-core/contrib/diff-highlight/diff-highlight

[commit]
	verbose = true
	gpgsign = true
[tag]
	gpgsign = true
[fetch]
	prune = true
[pull]
	rebase = merges
	tags = true
[push]
	default = upstream
	followTags = true
[rerere]
	enabled = 1
	autoupdate = true
[stash]
	showPatch = true
	showStat = true

[submodule]
	fetchJobs = 4

[hooks]
	global = ~/.config/git/hooks

[init]
	; templatedir = ~/.config/git/template

[advice]
	statusHints = false

[format]
	pretty=format:%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%ar) %C(bold blue)%an%C(reset)

[color]
	branch = auto
	diff = auto
	grep = auto
	interactive = auto
	showbranch = auto
	status = auto
	ui = auto
[color "branch"]
	current = reverse green
	local = normal
	remote = red
  #plain = auto
[color "diff"]
	old = red
	new = green
	plain = normal
	whitespace = reverse normal
	meta = reverse cyan
	frag = ul cyan
	func = magenta
	commit = green
[color "status"]
	header = normal
	added = blue
	changed = green
	untracked = cyan
	branch = reverse normal
	nobranch = red
[color "diff-highlight"]
	oldNormal = dim red
	oldHighlight = red
	newNormal = dim green
	newHighlight = green

[sendemail]
	confirm = auto
	identity = jasonkarns
	smtpEncryption = tls
	smtpServer = smtp.gmail.com
	smtpServerPort = 587
	smtpPass = { see .config/git/config.local }
[sendemail "jasonkarns"]
	smtpUser = jason.karns@gmail.com
[sendemail "testdouble"]
	smtpUser = jason@testdouble.com

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[svn]
	authorsfile = /Users/jasonkarns/.config/git/svn-authors

[include]
	path = config.local
