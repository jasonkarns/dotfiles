#!/bin/sh

# repo root
root=$(git rev-parse --show-toplevel)

# guard against uncommitted changes
if [ "`git status --porcelain`" != "" ]; then
  echo "Cannot rebase with uncommitted changes:";
  git status;
  exit 1;
fi

# checkout the clearcase branch from git
git checkout clearcase

# clean up files left by checkout
git clean -df -- $root

# update from clearcase
cleartool update -log $root/.git/cc.log $root

# format the clearcase log file for git
sed -e "s/^#/=/" -e "1 i CLEARCASE UPDATE" <$root/.git/cc.log>$root/.git/cc.msg

# add all changes to git
git add -A -- $root

# commit changes to git
git commit --file=$root/.git/cc.msg

exit


# checkout master
git checkout master

# rebase from clearcase
git rebase clearcase

# fix up write permissions b/c clearcase sucks (checkout all hijacked files)
cleartool setactivity dev_sync 
cleartool ls -recurse | grep "hijacked" | sed -e 's/\\/\//g' -e 's/\s\[.*//g' | while read elem; do cleartool checkout -unreserved -ncomment -usehijack "$elem"; done 
cleartool setactivity -none

# uncheckout any unchanged checkouts
cleartool lscheckout -cview -me -short -recurse | sed 's/\\/\//g' | cc_uncheckout_unchanged

# normalize newlines
git add . && git reset
